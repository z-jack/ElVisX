SET(ELVIS_FOUND "ON")
SET(ELVIS_ROOT_DIR "@CMAKE_INSTALL_PREFIX@")
SET(ELVIS_INCLUDE_DIRS ${ELVIS++_ROOT_DIR}/include)
SET(ELVIS_LIBRARY_DIRS ${ELVIS++_ROOT_DIR}/lib)
SET(ELVIS_BIN_DIR ${ELVIS++_ROOT_DIR}/bin)

SET(Boost_USE_STATIC_LIBS "@Boost_USE_STATIC_LIBS@")
SET(Boost_USE_MULTITHREADED "@Boost_USE_MULTITHREADED@")
SET(BOOST_INCLUDEDIR "@BOOST_INCLUDEDIR@")
SET(BOOST_LIBRARYDIR "@BOOST_LIBRARYDIR@")
SET(Boost_FOUND "@Boost_FOUND@")
SET(Boost_INCLUDE_DIRS "@Boost_INCLUDE_DIRS@")
SET(Boost_INCLUDE_DIR "@Boost_INCLUDE_DIR@")
SET(Boost_LIBRARIES "@Boost_LIBRARIES@")
SET(Boost_LIBRARY_DIRS "@Boost_LIBRARY_DIRS@")
SET(Boost_VERSION "@Boost_VERSION@")
SET(Boost_THREAD_LIBRARY "@Boost_THREAD_LIBRARY@")
SET(Boost_ZLIB_LIBRARY "@Boost_ZLIB_LIBRARY@")
SET(Boost_IOSTREAMS_LIBRARY "@Boost_IOSTREAMS_LIBRARY@")
SET(Boost_DATE_TIME_LIBRARY "@Boost_DATE_TIME_LIBRARY@")
SET(Boost_FILESYSTEM_LIBRARY "@Boost_FILESYSTEM_LIBRARY@")
SET(Boost_SYSTEM_LIBRARY "@Boost_SYSTEM_LIBRARY@")

SET(CMAKE_MODULE_PATH ${ELVIS++_ROOT_DIR} ${CMAKE_MODULE_PATH})


INCLUDE(${ELVIS++_ROOT_DIR}/lib/ElVisLibraries.cmake)

FIND_FILE(NEKTAR_DEBUG_LIBRARIES ElVis++Libraries-debug.cmake ${NEKTAR++_ROOT_DIR}/lib)
IF( NEKTAR_DEBUG_LIBRARIES )
    INCLUDE(${NEKTAR_DEBUG_LIBRARIES})
ENDIF( NEKTAR_DEBUG_LIBRARIES )

FIND_FILE(NEKTAR_RELEASE_LIBRARIES Nektar++Libraries-release.cmake ${NEKTAR++_ROOT_DIR}/lib)
IF(NEKTAR_RELEASE_LIBRARIES)
    INCLUDE(${NEKTAR_RELEASE_LIBRARIES})
ENDIF(NEKTAR_RELEASE_LIBRARIES)

FIND_FILE(NEKTAR_RELEASE_WITH_DEBUG_INFO_LIBRARIES Nektar++Libraries-relwithdebinfo.cmake ${NEKTAR++_ROOT_DIR}/lib)
IF(NEKTAR_RELEASE_WITH_DEBUG_INFO_LIBRARIES)
    INCLUDE(${NEKTAR_RELEASE_WITH_DEBUG_INFO_LIBRARIES})
ENDIF(NEKTAR_RELEASE_WITH_DEBUG_INFO_LIBRARIES)

SET(NEKTAR++_LIBRARIES MultiRegions LocalRegions SpatialDomains StdRegions LibUtilities)

MARK_AS_ADVANCED(NEKTAR_RELEASE_LIBRARIES)
MARK_AS_ADVANCED(NEKTAR_DEBUG_LIBRARIES)
MARK_AS_ADVANCED(NEKTAR_RELEASE_WITH_DEBUG_INFO_LIBRARIES)

IF(NEKTAR_USE_FFTW)
   INCLUDE_DIRECTORIES(${FFTW_INCLUDE_DIR})
ENDIF(NEKTAR_USE_FFTW)

IF(NEKTAR_USE_ARPACK)
    INCLUDE_DIRECTORIES(${ARPACK_INCLUDE_DIR})
ENDIF(NEKTAR_USE_ARPACK)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR} ${LOKI_INCLUDE_DIR} ${TINYXML_BASE} ${NIST_SPARSE_BLAS_INCLUDE_DIR})

