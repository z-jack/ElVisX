# - Try to find ProjectX
# Once done this will define
#  
#  PROJECTX_FOUND        - system has PROJECTX
#  PROJECTX_INCLUDE_DIR  - the PROJECTX include directory
#  PROJECTX_LIBRARY_DIR  - where the libraries are
#  PROJECTX_LIBRARY      - Link these to use PROJECTX
#   

SET(PROJECTX_DIR /home CACHE PATH "ProjectX Directory")
#SET(LEDA_DIR /home CACHE PATH "LEDA Directory")

if( UNIX AND NOT APPLE )
  # header files
  FIND_PATH( PROJECTX_INCLUDE_DIR PXSolver.h 
             PATHS ${PROJECTX_DIR}/include )

  FIND_LIBRARY( PROJECTX_LIBRARY_FUNDAMENTALS
                 NAMES PXFundamentals
                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_REFERENCE
                 NAMES PXReference
                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_GRID
                 NAMES PXGrid
                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_CUTCELL3D
                 NAMES PXCutCell3d
                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_COMPRESSIBLE
                 NAMES PXCompressible
                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_PX
                 NAMES PX
                 PATHS ${PROJECTX_DIR}/lib )

#  FIND_LIBRARY( PROJECTX_LIBRARY_PXSHIT
#                 NAMES PXShit
#                 PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_LINEARSOLVER
                NAMES PXLinearSolver
                PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( PROJECTX_LIBRARY_ADAPT
                NAMES PXAdaptMechanics
                PATHS ${PROJECTX_DIR}/lib )

  FIND_LIBRARY( CGNS_LIBRARY
                 NAMES cgns
                 PATHS ${PROJECTX_DIR}/lib )


  FIND_LIBRARY( UMFPACK_LIBRARY 
                NAMES umfpack
                PATHS $ENV{UMFAMD_DIR}/umfpack/UMFPACK/Lib )

  FIND_LIBRARY( AMD_LIBRARY 
                NAMES amd
                PATHS $ENV{UMFAMD_DIR}/umfpack/AMD/lib )

  FIND_LIBRARY( NLOPT_LIBRARIES nlopt
                PATHS $ENV{NLOPT_DIR}/lib )


  SET(PROJECTX_LIBRARIES ${PROJECTX_LIBRARY_FUNDAMENTALS} ${PROJECTX_LIBRARY_REFERENCE} ${PROJECTX_LIBRARY_GRID} ${PROJECTX_LIBRARY_CUTCELL3D} ${PROJECTX_LIBRARY_COMPRESSIBLE} ${PROJECTX_LIBRARY_PX} ${PROJECTX_LIBRARY_LINEARSOLVER} ${PROJECTX_LIBRARY_ADAPT} ${CGNS_LIBRARY} ${UMFPACK_LIBRARY} ${AMD_LIBRARY} ${NLOPT_LIBRARIES} ${PROJECTX_LIBRARY_FUNDAMENTALS})


IF (PROJECTX_INCLUDE_DIR AND PROJECTX_LIBRARIES)
   SET(PROJECTX_FOUND TRUE)
    SET( PROJECTX_LIBRARY_DIR ${PROJECTX_DIR}/lib )
ELSE (PROJECTX_INCLUDE_DIR AND PROJECTX_LIBRARIES)
   SET( PROJECTX_FOUND FALSE )
   SET( PROJECTX_LIBRARY_DIR )
ENDIF (PROJECTX_INCLUDE_DIR AND PROJECTX_LIBRARIES)

endif( UNIX AND NOT APPLE )


